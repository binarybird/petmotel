---
apiVersion: apps/v1
kind: Deployment 
metadata: 
  creationTimestamp: null 
  labels: 
    app: petmotel-web 
  name: petmotel-web 
  namespace: petmotel
spec: 
  replicas: 1
  selector: 
    matchLabels: 
      app: petmotel-web 
  strategy: {} 
  template: 
    metadata: 
      creationTimestamp: null 
      labels: 
        app: petmotel-web 
    spec: 
        dnsPolicy: ClusterFirst
        imagePullSecrets: 
          - name: regcred 
        containers: 
          - image: docker.io/binarybird/petmotel-web 
            name: petmotel-web
            imagePullPolicy: Always 
            resources: {}
            env:
              - name: RMQU
                valueFrom:
                  secretKeyRef:
                    name: petmotel-mq-default-user
                    key: username
              - name: RMQP
                valueFrom:
                  secretKeyRef:
                    name: petmotel-mq-default-user
                    key: password
              - name: CRTP
                value: "/tls/ca.crt"
              - name: KP
                value: "/tls/tls.key"
              - name: CAP
                value: "/tls/ca.crt"    
            ports: 
              - name: http
                containerPort: 80
            volumeMounts:
              - mountPath: "/tls"
                name: tls
                readOnly: true
        volumes:
          - name: tls
            secret:
              secretName: rabbitmq-tls-cert-secret
#          - name: tls
#            csi:
#              driver: csi.cert-manager.io
#              volumeAttributes:
#                    csi.cert-manager.io/issuer-name: petmotel-tls-issuer
#                    csi.cert-manager.io/common-name: cluster.local
#                    csi.cert-manager.io/dns-names: cluster.local,svc.cluster.local,petmotel.svc.cluster.local,petmotel-mq.petmotel.svc.cluster.local,petmotel-mq-nodes.petmotel.svc.cluster.local,petmotel-mq-server-0.petmotel.svc.cluster.local
status: {} 
---
﻿apiVersion: v1
kind: Service
metadata:
  name: petmotel-web
  namespace: petmotel
  labels:
    run: petmotel-web
spec:
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: petmotel-web
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: petmotel-web-ingress
  namespace: petmotel
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-staging
spec:
  tls:
  - hosts:
    - petmotel.org
    secretName: petmotel-web-ingress-crt
  rules:
  - host: petmotel.org
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
            service:
                name: petmotel-web
                port:
                    number: 80

